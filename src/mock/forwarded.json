{
  "packageName": "forwarded",
  "packageVersion": "0.2.0",
  "request": "forwarded",
  "resolved": "index.js",
  "files": {
    "index.js": "/*!\n * forwarded\n * Copyright(c) 2014-2017 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = forwarded\n\n/**\n * Get all addresses in the request, using the `X-Forwarded-For` header.\n *\n * @param {object} req\n * @return {array}\n * @public\n */\n\nfunction forwarded (req) {\n  if (!req) {\n    throw new TypeError('argument req is required')\n  }\n\n  // simple header parsing\n  var proxyAddrs = parse(req.headers['x-forwarded-for'] || '')\n  var socketAddr = getSocketAddr(req)\n  var addrs = [socketAddr].concat(proxyAddrs)\n\n  // return all addresses\n  return addrs\n}\n\n/**\n * Get the socket address for a request.\n *\n * @param {object} req\n * @return {string}\n * @private\n */\n\nfunction getSocketAddr (req) {\n  return req.socket\n    ? req.socket.remoteAddress\n    : req.connection.remoteAddress\n}\n\n/**\n * Parse the X-Forwarded-For header.\n *\n * @param {string} header\n * @private\n */\n\nfunction parse (header) {\n  var end = header.length\n  var list = []\n  var start = header.length\n\n  // gather addresses, backwards\n  for (var i = header.length - 1; i >= 0; i--) {\n    switch (header.charCodeAt(i)) {\n      case 0x20: /*   */\n        if (start === end) {\n          start = end = i\n        }\n        break\n      case 0x2c: /* , */\n        if (start !== end) {\n          list.push(header.substring(start, end))\n        }\n        start = end = i\n        break\n      default:\n        start = i\n        break\n    }\n  }\n\n  // final address\n  if (start !== end) {\n    list.push(header.substring(start, end))\n  }\n\n  return list\n}\n",
    "package.json": "{\n  \"name\": \"forwarded\",\n  \"description\": \"Parse HTTP X-Forwarded-For header\",\n  \"version\": \"0.2.0\",\n  \"contributors\": [\n    \"Douglas Christopher Wilson <doug@somethingdoug.com>\"\n  ],\n  \"license\": \"MIT\",\n  \"keywords\": [\n    \"x-forwarded-for\",\n    \"http\",\n    \"req\"\n  ],\n  \"repository\": \"jshttp/forwarded\",\n  \"devDependencies\": {\n    \"beautify-benchmark\": \"0.2.4\",\n    \"benchmark\": \"2.1.4\",\n    \"deep-equal\": \"1.0.1\",\n    \"eslint\": \"7.27.0\",\n    \"eslint-config-standard\": \"14.1.1\",\n    \"eslint-plugin-import\": \"2.23.4\",\n    \"eslint-plugin-node\": \"11.1.0\",\n    \"eslint-plugin-promise\": \"4.3.1\",\n    \"eslint-plugin-standard\": \"4.1.0\",\n    \"mocha\": \"8.4.0\",\n    \"nyc\": \"15.1.0\"\n  },\n  \"files\": [\n    \"LICENSE\",\n    \"HISTORY.md\",\n    \"README.md\",\n    \"index.js\"\n  ],\n  \"engines\": {\n    \"node\": \">= 0.6\"\n  },\n  \"scripts\": {\n    \"bench\": \"node benchmark/index.js\",\n    \"lint\": \"eslint .\",\n    \"test\": \"mocha --reporter spec --bail --check-leaks test/\",\n    \"test-ci\": \"nyc --reporter=lcov --reporter=text npm test\",\n    \"test-cov\": \"nyc --reporter=html --reporter=text npm test\",\n    \"version\": \"node scripts/version-history.js && git add HISTORY.md\"\n  }\n}\n"
  },
  "externals": []
}
