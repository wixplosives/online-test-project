{
  "packageName": "unpipe",
  "packageVersion": "1.0.0",
  "request": "unpipe",
  "resolved": "index.js",
  "files": {
    "index.js": "/*!\n * unpipe\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = unpipe\n\n/**\n * Determine if there are Node.js pipe-like data listeners.\n * @private\n */\n\nfunction hasPipeDataListeners(stream) {\n  var listeners = stream.listeners('data')\n\n  for (var i = 0; i < listeners.length; i++) {\n    if (listeners[i].name === 'ondata') {\n      return true\n    }\n  }\n\n  return false\n}\n\n/**\n * Unpipe a stream from all destinations.\n *\n * @param {object} stream\n * @public\n */\n\nfunction unpipe(stream) {\n  if (!stream) {\n    throw new TypeError('argument stream is required')\n  }\n\n  if (typeof stream.unpipe === 'function') {\n    // new-style\n    stream.unpipe()\n    return\n  }\n\n  // Node.js 0.8 hack\n  if (!hasPipeDataListeners(stream)) {\n    return\n  }\n\n  var listener\n  var listeners = stream.listeners('close')\n\n  for (var i = 0; i < listeners.length; i++) {\n    listener = listeners[i]\n\n    if (listener.name !== 'cleanup' && listener.name !== 'onclose') {\n      continue\n    }\n\n    // invoke the listener\n    listener.call(stream)\n  }\n}\n",
    "package.json": "{\n  \"name\": \"unpipe\",\n  \"description\": \"Unpipe a stream from all destinations\",\n  \"version\": \"1.0.0\",\n  \"author\": \"Douglas Christopher Wilson <doug@somethingdoug.com>\",\n  \"license\": \"MIT\",\n  \"repository\": \"stream-utils/unpipe\",\n  \"devDependencies\": {\n    \"istanbul\": \"0.3.15\",\n    \"mocha\": \"2.2.5\",\n    \"readable-stream\": \"1.1.13\"\n  },\n  \"files\": [\n    \"HISTORY.md\",\n    \"LICENSE\",\n    \"README.md\",\n    \"index.js\"\n  ],\n  \"engines\": {\n    \"node\": \">= 0.8\"\n  },\n  \"scripts\": {\n    \"test\": \"mocha --reporter spec --bail --check-leaks test/\",\n    \"test-cov\": \"istanbul cover node_modules/mocha/bin/_mocha -- --reporter dot --check-leaks test/\",\n    \"test-travis\": \"istanbul cover node_modules/mocha/bin/_mocha --report lcovonly -- --reporter spec --check-leaks test/\"\n  }\n}\n"
  },
  "externals": []
}
