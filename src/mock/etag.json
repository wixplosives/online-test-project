{
  "packageName": "etag",
  "packageVersion": "1.8.1",
  "request": "etag",
  "resolved": "index.js",
  "files": {
    "index.js": "/*!\n * etag\n * Copyright(c) 2014-2016 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = etag\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar crypto = require('crypto')\nvar Stats = require('fs').Stats\n\n/**\n * Module variables.\n * @private\n */\n\nvar toString = Object.prototype.toString\n\n/**\n * Generate an entity tag.\n *\n * @param {Buffer|string} entity\n * @return {string}\n * @private\n */\n\nfunction entitytag (entity) {\n  if (entity.length === 0) {\n    // fast-path empty\n    return '\"0-2jmj7l5rSw0yVb/vlWAYkK/YBwk\"'\n  }\n\n  // compute hash of entity\n  var hash = crypto\n    .createHash('sha1')\n    .update(entity, 'utf8')\n    .digest('base64')\n    .substring(0, 27)\n\n  // compute length of entity\n  var len = typeof entity === 'string'\n    ? Buffer.byteLength(entity, 'utf8')\n    : entity.length\n\n  return '\"' + len.toString(16) + '-' + hash + '\"'\n}\n\n/**\n * Create a simple ETag.\n *\n * @param {string|Buffer|Stats} entity\n * @param {object} [options]\n * @param {boolean} [options.weak]\n * @return {String}\n * @public\n */\n\nfunction etag (entity, options) {\n  if (entity == null) {\n    throw new TypeError('argument entity is required')\n  }\n\n  // support fs.Stats object\n  var isStats = isstats(entity)\n  var weak = options && typeof options.weak === 'boolean'\n    ? options.weak\n    : isStats\n\n  // validate argument\n  if (!isStats && typeof entity !== 'string' && !Buffer.isBuffer(entity)) {\n    throw new TypeError('argument entity must be string, Buffer, or fs.Stats')\n  }\n\n  // generate entity tag\n  var tag = isStats\n    ? stattag(entity)\n    : entitytag(entity)\n\n  return weak\n    ? 'W/' + tag\n    : tag\n}\n\n/**\n * Determine if object is a Stats object.\n *\n * @param {object} obj\n * @return {boolean}\n * @api private\n */\n\nfunction isstats (obj) {\n  // genuine fs.Stats\n  if (typeof Stats === 'function' && obj instanceof Stats) {\n    return true\n  }\n\n  // quack quack\n  return obj && typeof obj === 'object' &&\n    'ctime' in obj && toString.call(obj.ctime) === '[object Date]' &&\n    'mtime' in obj && toString.call(obj.mtime) === '[object Date]' &&\n    'ino' in obj && typeof obj.ino === 'number' &&\n    'size' in obj && typeof obj.size === 'number'\n}\n\n/**\n * Generate a tag for a stat.\n *\n * @param {object} stat\n * @return {string}\n * @private\n */\n\nfunction stattag (stat) {\n  var mtime = stat.mtime.getTime().toString(16)\n  var size = stat.size.toString(16)\n\n  return '\"' + size + '-' + mtime + '\"'\n}\n",
    "package.json": "{\n  \"name\": \"etag\",\n  \"description\": \"Create simple HTTP ETags\",\n  \"version\": \"1.8.1\",\n  \"contributors\": [\n    \"Douglas Christopher Wilson <doug@somethingdoug.com>\",\n    \"David Bj√∂rklund <david.bjorklund@gmail.com>\"\n  ],\n  \"license\": \"MIT\",\n  \"keywords\": [\n    \"etag\",\n    \"http\",\n    \"res\"\n  ],\n  \"repository\": \"jshttp/etag\",\n  \"devDependencies\": {\n    \"beautify-benchmark\": \"0.2.4\",\n    \"benchmark\": \"2.1.4\",\n    \"eslint\": \"3.19.0\",\n    \"eslint-config-standard\": \"10.2.1\",\n    \"eslint-plugin-import\": \"2.7.0\",\n    \"eslint-plugin-markdown\": \"1.0.0-beta.6\",\n    \"eslint-plugin-node\": \"5.1.1\",\n    \"eslint-plugin-promise\": \"3.5.0\",\n    \"eslint-plugin-standard\": \"3.0.1\",\n    \"istanbul\": \"0.4.5\",\n    \"mocha\": \"1.21.5\",\n    \"safe-buffer\": \"5.1.1\",\n    \"seedrandom\": \"2.4.3\"\n  },\n  \"files\": [\n    \"LICENSE\",\n    \"HISTORY.md\",\n    \"README.md\",\n    \"index.js\"\n  ],\n  \"engines\": {\n    \"node\": \">= 0.6\"\n  },\n  \"scripts\": {\n    \"bench\": \"node benchmark/index.js\",\n    \"lint\": \"eslint --plugin markdown --ext js,md .\",\n    \"test\": \"mocha --reporter spec --bail --check-leaks test/\",\n    \"test-cov\": \"istanbul cover node_modules/mocha/bin/_mocha -- --reporter dot --check-leaks test/\",\n    \"test-travis\": \"istanbul cover node_modules/mocha/bin/_mocha --report lcovonly -- --reporter spec --check-leaks test/\"\n  }\n}\n"
  },
  "externals": [
    "crypto",
    "fs"
  ]
}
