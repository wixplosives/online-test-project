{
  "packageName": "@wixc3/board-core",
  "packageVersion": "2.3.0",
  "request": "@wixc3/board-core",
  "resolved": "dist/index.js",
  "files": {
    "dist/index.js": "\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./create-metadata\"), exports);\n__exportStar(require(\"./create-renderable-base\"), exports);\n__exportStar(require(\"./setup-stage\"), exports);\n__exportStar(require(\"./hooks\"), exports);\n__exportStar(require(\"./types\"), exports);\n//# sourceMappingURL=index.js.map",
    "package.json": "{\n  \"name\": \"@wixc3/board-core\",\n  \"description\": \"Types and helpers for component boards\",\n  \"version\": \"2.3.0\",\n  \"main\": \"dist/index.js\",\n  \"files\": [\n    \"dist\",\n    \"!dist/test\",\n    \"src\",\n    \"!*/tsconfig.{json,tsbuildinfo}\"\n  ],\n  \"license\": \"MIT\",\n  \"repository\": \"https://github.com/wixplosives/codux-core/tree/master/packages/board-core\",\n  \"homepage\": \"https://github.com/wixplosives/codux-core\",\n  \"publishConfig\": {\n    \"access\": \"public\"\n  }\n}\n",
    "dist/create-metadata.js": "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createMetadata = void 0;\nfunction createMetadata(metadata) {\n    return metadata;\n}\nexports.createMetadata = createMetadata;\n//# sourceMappingURL=create-metadata.js.map",
    "dist/create-renderable-base.js": "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createRenderableBase = exports.baseRender = void 0;\nconst create_metadata_1 = require(\"./create-metadata\");\nconst setup_stage_1 = require(\"./setup-stage\");\nconst hooks_1 = require(\"./hooks\");\nasync function baseRender(data, render, canvas) {\n    (0, hooks_1.callHooks)(data, 'beforeRender', canvas);\n    const cleanup = await render(canvas);\n    (0, hooks_1.callHooks)(data, 'afterRender', canvas);\n    return cleanup;\n}\nexports.baseRender = baseRender;\nfunction createRenderableBase(data) {\n    const res = (0, create_metadata_1.createMetadata)(Object.assign(Object.assign({}, data), { setupStage(parentElement = document.body) {\n            return (0, setup_stage_1.setupBoardStage)(this, parentElement);\n        } }));\n    return res;\n}\nexports.createRenderableBase = createRenderableBase;\n//# sourceMappingURL=create-renderable-base.js.map",
    "dist/setup-stage.js": "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.setupBoardStage = exports.defaultEnvironmentProperties = exports.defaultCanvasStyles = exports.defaultWindowStyles = void 0;\nconst hooks_1 = require(\"./hooks\");\nexports.defaultWindowStyles = {\n    width: 1024,\n    height: 640,\n};\nexports.defaultCanvasStyles = {\n    width: 'fit-content',\n    height: 'fit-content',\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    marginBottom: 'auto',\n    marginTop: 'auto',\n    paddingLeft: '0px',\n    paddingRight: '0px',\n    paddingBottom: '0px',\n    paddingTop: '0px',\n};\nexports.defaultEnvironmentProperties = {\n    windowWidth: exports.defaultWindowStyles.width,\n    windowHeight: exports.defaultWindowStyles.height,\n    canvasMargin: {},\n    canvasPadding: {},\n};\nconst applyStylesToWindow = (windowStyles = {}, previousProps) => {\n    // we revert the changes to previous values when running cleanup\n    previousProps.windowHeight = previousProps.windowHeight ? window.outerHeight : exports.defaultWindowStyles.height;\n    previousProps.windowWidth = previousProps.windowWidth ? window.outerWidth : exports.defaultWindowStyles.width;\n    window.resizeTo(windowStyles.windowWidth || previousProps.windowWidth, windowStyles.windowHeight || previousProps.windowHeight);\n    document.body.style.backgroundColor = windowStyles.windowBackgroundColor || '';\n};\nconst applyStylesToCanvas = (canvas, environmentProps = {}) => {\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s, _t;\n    const canvasStyle = {\n        width: environmentProps.canvasWidth ? `${environmentProps.canvasWidth}px` : exports.defaultCanvasStyles.width,\n        height: environmentProps.canvasHeight ? `${environmentProps.canvasHeight}px` : exports.defaultCanvasStyles.height,\n        marginLeft: ((_a = environmentProps.canvasMargin) === null || _a === void 0 ? void 0 : _a.left)\n            ? `${(_b = environmentProps.canvasMargin) === null || _b === void 0 ? void 0 : _b.left}px`\n            : exports.defaultCanvasStyles.marginLeft,\n        marginRight: ((_c = environmentProps.canvasMargin) === null || _c === void 0 ? void 0 : _c.right)\n            ? `${(_d = environmentProps.canvasMargin) === null || _d === void 0 ? void 0 : _d.right}px`\n            : exports.defaultCanvasStyles.marginRight,\n        marginBottom: ((_e = environmentProps.canvasMargin) === null || _e === void 0 ? void 0 : _e.bottom)\n            ? `${(_f = environmentProps.canvasMargin) === null || _f === void 0 ? void 0 : _f.bottom}px`\n            : exports.defaultCanvasStyles.marginBottom,\n        marginTop: ((_g = environmentProps.canvasMargin) === null || _g === void 0 ? void 0 : _g.top)\n            ? `${(_h = environmentProps.canvasMargin) === null || _h === void 0 ? void 0 : _h.top}px`\n            : exports.defaultCanvasStyles.marginTop,\n        paddingLeft: ((_j = environmentProps.canvasPadding) === null || _j === void 0 ? void 0 : _j.left)\n            ? `${(_k = environmentProps.canvasPadding) === null || _k === void 0 ? void 0 : _k.left}px`\n            : exports.defaultCanvasStyles.paddingLeft,\n        paddingRight: ((_l = environmentProps.canvasPadding) === null || _l === void 0 ? void 0 : _l.right)\n            ? `${(_m = environmentProps.canvasPadding) === null || _m === void 0 ? void 0 : _m.right}px`\n            : exports.defaultCanvasStyles.paddingRight,\n        paddingBottom: ((_o = environmentProps.canvasPadding) === null || _o === void 0 ? void 0 : _o.bottom)\n            ? `${(_p = environmentProps.canvasPadding) === null || _p === void 0 ? void 0 : _p.bottom}px`\n            : exports.defaultCanvasStyles.paddingBottom,\n        paddingTop: ((_q = environmentProps.canvasPadding) === null || _q === void 0 ? void 0 : _q.top)\n            ? `${(_r = environmentProps.canvasPadding) === null || _r === void 0 ? void 0 : _r.top}px`\n            : exports.defaultCanvasStyles.paddingTop,\n        backgroundColor: environmentProps.canvasBackgroundColor || '',\n    };\n    // Canvas gets stretched horizontally/vertically\n    // when horizontal (left and right) or vertical (top and bottom) margins are applied.\n    if (((_s = environmentProps.canvasMargin) === null || _s === void 0 ? void 0 : _s.left) !== undefined && environmentProps.canvasMargin.right !== undefined) {\n        canvasStyle.width = '100%';\n    }\n    if (((_t = environmentProps.canvasMargin) === null || _t === void 0 ? void 0 : _t.top) !== undefined && environmentProps.canvasMargin.bottom !== undefined) {\n        canvasStyle.height = 'auto';\n    }\n    Object.assign(canvas.style, canvasStyle);\n};\nconst setupBoardStage = (board, parentElement) => {\n    const previousWindowEnvironmentProps = {};\n    const canvas = document.createElement('div');\n    canvas.setAttribute('id', 'board-canvas');\n    const { environmentProps } = board;\n    applyStylesToWindow(environmentProps, previousWindowEnvironmentProps);\n    applyStylesToCanvas(canvas, environmentProps);\n    (0, hooks_1.callHooks)(board, 'beforeAppendCanvas', canvas);\n    parentElement.appendChild(canvas);\n    const updateCanvas = (canvasEnvironmentProps) => {\n        applyStylesToCanvas(canvas, canvasEnvironmentProps);\n    };\n    const updateWindow = (windowEnvironmentProps) => {\n        applyStylesToWindow(windowEnvironmentProps, previousWindowEnvironmentProps);\n    };\n    const cleanup = () => {\n        (0, hooks_1.callHooks)(board, 'beforeStageCleanUp', canvas);\n        canvas.remove();\n        if (previousWindowEnvironmentProps.windowWidth && previousWindowEnvironmentProps.windowHeight) {\n            window.resizeTo(previousWindowEnvironmentProps.windowWidth, previousWindowEnvironmentProps.windowHeight);\n        }\n    };\n    return { canvas, updateCanvas, updateWindow, cleanup };\n};\nexports.setupBoardStage = setupBoardStage;\n//# sourceMappingURL=setup-stage.js.map",
    "dist/hooks.js": "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.callHooks = exports.getPluginsWithHooks = void 0;\nfunction getPluginsWithHooks(data, hookName) {\n    if (!data.plugins) {\n        return [];\n    }\n    return data.plugins.filter((item) => !!item.key.plugin[hookName]);\n}\nexports.getPluginsWithHooks = getPluginsWithHooks;\nfunction callHooks(data, hookName, ...props) {\n    const plugins = getPluginsWithHooks(data, hookName);\n    for (const pluginInfo of plugins) {\n        if (pluginInfo.key.plugin[hookName]) {\n            pluginInfo.key.plugin[hookName](pluginInfo.props, ...props);\n        }\n    }\n}\nexports.callHooks = callHooks;\n//# sourceMappingURL=hooks.js.map",
    "dist/types.js": "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createPlugin = exports.defaultMerge = void 0;\nconst defaultMerge = (props) => [\n    props.reduceRight((acc, curr) => {\n        return Object.assign(Object.assign({}, acc), curr);\n    }),\n];\nexports.defaultMerge = defaultMerge;\nconst createPlugin = () => (pluginName, defaultProps, plugin, merge = exports.defaultMerge) => {\n    const res = {\n        pluginName,\n        defaultProps,\n        plugin,\n        use: (props) => {\n            return {\n                key: res,\n                props: Object.assign(Object.assign({}, defaultProps), props),\n            };\n        },\n        merge,\n    };\n    return res;\n};\nexports.createPlugin = createPlugin;\n//# sourceMappingURL=types.js.map"
  },
  "externals": []
}
