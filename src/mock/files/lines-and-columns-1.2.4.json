{
  "packageName": "lines-and-columns",
  "packageVersion": "1.2.4",
  "request": "lines-and-columns",
  "resolved": "build/index.js",
  "files": {
    "build/index.js": "\"use strict\";\nexports.__esModule = true;\nexports.LinesAndColumns = void 0;\nvar LF = '\\n';\nvar CR = '\\r';\nvar LinesAndColumns = /** @class */ (function () {\n    function LinesAndColumns(string) {\n        this.string = string;\n        var offsets = [0];\n        for (var offset = 0; offset < string.length;) {\n            switch (string[offset]) {\n                case LF:\n                    offset += LF.length;\n                    offsets.push(offset);\n                    break;\n                case CR:\n                    offset += CR.length;\n                    if (string[offset] === LF) {\n                        offset += LF.length;\n                    }\n                    offsets.push(offset);\n                    break;\n                default:\n                    offset++;\n                    break;\n            }\n        }\n        this.offsets = offsets;\n    }\n    LinesAndColumns.prototype.locationForIndex = function (index) {\n        if (index < 0 || index > this.string.length) {\n            return null;\n        }\n        var line = 0;\n        var offsets = this.offsets;\n        while (offsets[line + 1] <= index) {\n            line++;\n        }\n        var column = index - offsets[line];\n        return { line: line, column: column };\n    };\n    LinesAndColumns.prototype.indexForLocation = function (location) {\n        var line = location.line, column = location.column;\n        if (line < 0 || line >= this.offsets.length) {\n            return null;\n        }\n        if (column < 0 || column > this.lengthOfLine(line)) {\n            return null;\n        }\n        return this.offsets[line] + column;\n    };\n    LinesAndColumns.prototype.lengthOfLine = function (line) {\n        var offset = this.offsets[line];\n        var nextOffset = line === this.offsets.length - 1\n            ? this.string.length\n            : this.offsets[line + 1];\n        return nextOffset - offset;\n    };\n    return LinesAndColumns;\n}());\nexports.LinesAndColumns = LinesAndColumns;\nexports[\"default\"] = LinesAndColumns;\n",
    "package.json": "{\n  \"name\": \"lines-and-columns\",\n  \"version\": \"1.2.4\",\n  \"description\": \"Maps lines and columns to character offsets and back.\",\n  \"keywords\": [\n    \"lines\",\n    \"columns\",\n    \"parser\"\n  ],\n  \"homepage\": \"https://github.com/eventualbuddha/lines-and-columns#readme\",\n  \"bugs\": {\n    \"url\": \"https://github.com/eventualbuddha/lines-and-columns/issues\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"https://github.com/eventualbuddha/lines-and-columns.git\"\n  },\n  \"license\": \"MIT\",\n  \"author\": \"Brian Donovan <brian@donovans.cc>\",\n  \"main\": \"./build/index.js\",\n  \"types\": \"./build/index.d.ts\",\n  \"files\": [\n    \"build\"\n  ],\n  \"scripts\": {\n    \"build:watch\": \"tsc --build tsconfig.build.json --watch\",\n    \"lint\": \"eslint .\",\n    \"lint:fix\": \"eslint . --fix\",\n    \"test\": \"is-ci test:coverage test:watch\",\n    \"test:coverage\": \"jest --coverage\",\n    \"test:watch\": \"jest --watch\"\n  },\n  \"devDependencies\": {\n    \"@types/jest\": \"^27.0.3\",\n    \"@types/node\": \"^16.11.9\",\n    \"@typescript-eslint/eslint-plugin\": \"^5.4.0\",\n    \"@typescript-eslint/parser\": \"^5.4.0\",\n    \"esbuild\": \"^0.13.15\",\n    \"esbuild-runner\": \"^2.2.1\",\n    \"eslint\": \"^8.2.0\",\n    \"eslint-config-prettier\": \"^8.3.0\",\n    \"eslint-plugin-prettier\": \"^4.0.0\",\n    \"is-ci-cli\": \"^2.2.0\",\n    \"jest\": \"^27.3.1\",\n    \"prettier\": \"^2.4.1\",\n    \"semantic-release\": \"^18.0.0\",\n    \"typescript\": \"^4.5.2\"\n  }\n}\n"
  },
  "externals": []
}
