{
  "packageName": "@babel/helper-simple-access",
  "packageVersion": "7.22.5",
  "request": "@babel/helper-simple-access",
  "resolved": "lib/index.js",
  "files": {
    "lib/index.js": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = simplifyAccess;\nvar _t = require(\"@babel/types\");\nconst {\n  LOGICAL_OPERATORS,\n  assignmentExpression,\n  binaryExpression,\n  cloneNode,\n  identifier,\n  logicalExpression,\n  numericLiteral,\n  sequenceExpression,\n  unaryExpression\n} = _t;\nconst simpleAssignmentVisitor = {\n  AssignmentExpression: {\n    exit(path) {\n      const {\n        scope,\n        seen,\n        bindingNames\n      } = this;\n      if (path.node.operator === \"=\") return;\n      if (seen.has(path.node)) return;\n      seen.add(path.node);\n      const left = path.get(\"left\");\n      if (!left.isIdentifier()) return;\n      const localName = left.node.name;\n      if (!bindingNames.has(localName)) return;\n      if (scope.getBinding(localName) !== path.scope.getBinding(localName)) {\n        return;\n      }\n      const operator = path.node.operator.slice(0, -1);\n      if (LOGICAL_OPERATORS.includes(operator)) {\n        path.replaceWith(logicalExpression(operator, path.node.left, assignmentExpression(\"=\", cloneNode(path.node.left), path.node.right)));\n      } else {\n        path.node.right = binaryExpression(operator, cloneNode(path.node.left), path.node.right);\n        path.node.operator = \"=\";\n      }\n    }\n  }\n};\n{\n  simpleAssignmentVisitor.UpdateExpression = {\n    exit(path) {\n      if (!this.includeUpdateExpression) return;\n      const {\n        scope,\n        bindingNames\n      } = this;\n      const arg = path.get(\"argument\");\n      if (!arg.isIdentifier()) return;\n      const localName = arg.node.name;\n      if (!bindingNames.has(localName)) return;\n      if (scope.getBinding(localName) !== path.scope.getBinding(localName)) {\n        return;\n      }\n      if (path.parentPath.isExpressionStatement() && !path.isCompletionRecord()) {\n        const operator = path.node.operator == \"++\" ? \"+=\" : \"-=\";\n        path.replaceWith(assignmentExpression(operator, arg.node, numericLiteral(1)));\n      } else if (path.node.prefix) {\n        path.replaceWith(assignmentExpression(\"=\", identifier(localName), binaryExpression(path.node.operator[0], unaryExpression(\"+\", arg.node), numericLiteral(1))));\n      } else {\n        const old = path.scope.generateUidIdentifierBasedOnNode(arg.node, \"old\");\n        const varName = old.name;\n        path.scope.push({\n          id: old\n        });\n        const binary = binaryExpression(path.node.operator[0], identifier(varName), numericLiteral(1));\n        path.replaceWith(sequenceExpression([assignmentExpression(\"=\", identifier(varName), unaryExpression(\"+\", arg.node)), assignmentExpression(\"=\", cloneNode(arg.node), binary), identifier(varName)]));\n      }\n    }\n  };\n}\nfunction simplifyAccess(path, bindingNames) {\n  {\n    var _arguments$;\n    path.traverse(simpleAssignmentVisitor, {\n      scope: path.scope,\n      bindingNames,\n      seen: new WeakSet(),\n      includeUpdateExpression: (_arguments$ = arguments[2]) != null ? _arguments$ : true\n    });\n  }\n}\n\n//# sourceMappingURL=index.js.map\n",
    "package.json": "{\n  \"name\": \"@babel/helper-simple-access\",\n  \"version\": \"7.22.5\",\n  \"description\": \"Babel helper for ensuring that access to a given value is performed through simple accesses\",\n  \"author\": \"The Babel Team (https://babel.dev/team)\",\n  \"homepage\": \"https://babel.dev/docs/en/next/babel-helper-simple-access\",\n  \"license\": \"MIT\",\n  \"publishConfig\": {\n    \"access\": \"public\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"https://github.com/babel/babel.git\",\n    \"directory\": \"packages/babel-helper-simple-access\"\n  },\n  \"main\": \"./lib/index.js\",\n  \"dependencies\": {\n    \"@babel/types\": \"^7.22.5\"\n  },\n  \"devDependencies\": {\n    \"@babel/core\": \"^7.22.5\",\n    \"@babel/traverse\": \"^7.22.5\"\n  },\n  \"engines\": {\n    \"node\": \">=6.9.0\"\n  },\n  \"type\": \"commonjs\"\n}"
  },
  "externals": [
    "@babel/types"
  ]
}
