{
  "packageName": "@svgr/babel-preset",
  "packageVersion": "8.1.0",
  "request": "@svgr/babel-preset",
  "resolved": "dist/index.js",
  "files": {
    "dist/index.js": "'use strict';\n\nvar addJSXAttribute = require('@svgr/babel-plugin-add-jsx-attribute');\nvar removeJSXAttribute = require('@svgr/babel-plugin-remove-jsx-attribute');\nvar removeJSXEmptyExpression = require('@svgr/babel-plugin-remove-jsx-empty-expression');\nvar replaceJSXAttributeValue = require('@svgr/babel-plugin-replace-jsx-attribute-value');\nvar svgDynamicTitle = require('@svgr/babel-plugin-svg-dynamic-title');\nvar svgEmDimensions = require('@svgr/babel-plugin-svg-em-dimensions');\nvar transformReactNativeSVG = require('@svgr/babel-plugin-transform-react-native-svg');\nvar transformSvgComponent = require('@svgr/babel-plugin-transform-svg-component');\n\nconst getAttributeValue = (value) => {\n  const literal = typeof value === \"string\" && value.startsWith(\"{\") && value.endsWith(\"}\");\n  return { value: literal ? value.slice(1, -1) : value, literal };\n};\nconst propsToAttributes = (props) => {\n  return Object.keys(props).map((name) => {\n    const { literal, value } = getAttributeValue(props[name]);\n    return { name, literal, value };\n  });\n};\nfunction replaceMapToValues(replaceMap) {\n  return Object.keys(replaceMap).map((value) => {\n    const { literal, value: newValue } = getAttributeValue(replaceMap[value]);\n    return { value, newValue, literal };\n  });\n}\nconst plugin = (_, opts) => {\n  let toRemoveAttributes = [\"version\"];\n  let toAddAttributes = [];\n  if (opts.svgProps) {\n    toAddAttributes = [...toAddAttributes, ...propsToAttributes(opts.svgProps)];\n  }\n  if (opts.ref) {\n    toAddAttributes = [\n      ...toAddAttributes,\n      {\n        name: \"ref\",\n        value: \"ref\",\n        literal: true\n      }\n    ];\n  }\n  if (opts.titleProp) {\n    toAddAttributes = [\n      ...toAddAttributes,\n      {\n        name: \"aria-labelledby\",\n        value: \"titleId\",\n        literal: true\n      }\n    ];\n  }\n  if (opts.descProp) {\n    toAddAttributes = [\n      ...toAddAttributes,\n      {\n        name: \"aria-describedby\",\n        value: \"descId\",\n        literal: true\n      }\n    ];\n  }\n  if (opts.expandProps) {\n    toAddAttributes = [\n      ...toAddAttributes,\n      {\n        name: \"props\",\n        spread: true,\n        position: opts.expandProps === \"start\" || opts.expandProps === \"end\" ? opts.expandProps : void 0\n      }\n    ];\n  }\n  if (!opts.dimensions) {\n    toRemoveAttributes = [...toRemoveAttributes, \"width\", \"height\"];\n  }\n  const plugins = [\n    [transformSvgComponent, opts],\n    ...opts.icon !== false && opts.dimensions ? [\n      [\n        svgEmDimensions,\n        opts.icon !== true ? { width: opts.icon, height: opts.icon } : opts.native ? { width: 24, height: 24 } : {}\n      ]\n    ] : [],\n    [\n      removeJSXAttribute,\n      { elements: [\"svg\", \"Svg\"], attributes: toRemoveAttributes }\n    ],\n    [\n      addJSXAttribute,\n      { elements: [\"svg\", \"Svg\"], attributes: toAddAttributes }\n    ],\n    removeJSXEmptyExpression\n  ];\n  if (opts.replaceAttrValues) {\n    plugins.push([\n      replaceJSXAttributeValue,\n      { values: replaceMapToValues(opts.replaceAttrValues) }\n    ]);\n  }\n  if (opts.titleProp) {\n    plugins.push(svgDynamicTitle);\n  }\n  if (opts.descProp) {\n    plugins.push([svgDynamicTitle, { tag: \"desc\" }, \"desc\"]);\n  }\n  if (opts.native) {\n    plugins.push(transformReactNativeSVG);\n  }\n  return { plugins };\n};\n\nmodule.exports = plugin;\n//# sourceMappingURL=index.js.map\n",
    "package.json": "{\n  \"name\": \"@svgr/babel-preset\",\n  \"description\": \"SVGR preset that apply transformations from config\",\n  \"version\": \"8.1.0\",\n  \"main\": \"./dist/index.js\",\n  \"types\": \"./dist/index.d.ts\",\n  \"exports\": {\n    \".\": {\n      \"types\": \"./dist/index.d.ts\",\n      \"default\": \"./dist/index.js\"\n    },\n    \"./package.json\": \"./package.json\"\n  },\n  \"repository\": \"https://github.com/gregberge/svgr/tree/main/packages/babel-preset\",\n  \"author\": \"Greg Berg√© <berge.greg@gmail.com>\",\n  \"publishConfig\": {\n    \"access\": \"public\"\n  },\n  \"keywords\": [\n    \"babel-plugin\",\n    \"babel-preset\"\n  ],\n  \"engines\": {\n    \"node\": \">=14\"\n  },\n  \"homepage\": \"https://react-svgr.com\",\n  \"funding\": {\n    \"type\": \"github\",\n    \"url\": \"https://github.com/sponsors/gregberge\"\n  },\n  \"license\": \"MIT\",\n  \"dependencies\": {\n    \"@svgr/babel-plugin-add-jsx-attribute\": \"8.0.0\",\n    \"@svgr/babel-plugin-remove-jsx-attribute\": \"8.0.0\",\n    \"@svgr/babel-plugin-remove-jsx-empty-expression\": \"8.0.0\",\n    \"@svgr/babel-plugin-replace-jsx-attribute-value\": \"8.0.0\",\n    \"@svgr/babel-plugin-svg-dynamic-title\": \"8.0.0\",\n    \"@svgr/babel-plugin-svg-em-dimensions\": \"8.0.0\",\n    \"@svgr/babel-plugin-transform-react-native-svg\": \"8.1.0\",\n    \"@svgr/babel-plugin-transform-svg-component\": \"8.0.0\"\n  },\n  \"peerDependencies\": {\n    \"@babel/core\": \"^7.0.0-0\"\n  },\n  \"scripts\": {\n    \"reset\": \"rm -rf dist\",\n    \"build\": \"rollup -c ../../build/rollup.config.mjs\",\n    \"prepublishOnly\": \"pnpm run reset && pnpm run build\"\n  },\n  \"gitHead\": \"772592e042be5063e782bfb8711d024b2fefc6b8\"\n}\n"
  },
  "externals": [
    "@svgr/babel-plugin-add-jsx-attribute",
    "@svgr/babel-plugin-remove-jsx-attribute",
    "@svgr/babel-plugin-remove-jsx-empty-expression",
    "@svgr/babel-plugin-replace-jsx-attribute-value",
    "@svgr/babel-plugin-svg-dynamic-title",
    "@svgr/babel-plugin-svg-em-dimensions",
    "@svgr/babel-plugin-transform-react-native-svg",
    "@svgr/babel-plugin-transform-svg-component"
  ]
}
