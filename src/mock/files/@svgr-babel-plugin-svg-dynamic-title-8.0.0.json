{
  "packageName": "@svgr/babel-plugin-svg-dynamic-title",
  "packageVersion": "8.0.0",
  "request": "@svgr/babel-plugin-svg-dynamic-title",
  "resolved": "dist/index.js",
  "files": {
    "dist/index.js": "'use strict';\n\nvar core = require('@babel/core');\n\nconst elements = [\"svg\", \"Svg\"];\nconst createTagElement = (tag, children = [], attributes = []) => {\n  const eleName = core.types.jsxIdentifier(tag);\n  return core.types.jsxElement(\n    core.types.jsxOpeningElement(eleName, attributes),\n    core.types.jsxClosingElement(eleName),\n    children\n  );\n};\nconst createTagIdAttribute = (tag) => core.types.jsxAttribute(\n  core.types.jsxIdentifier(\"id\"),\n  core.types.jsxExpressionContainer(core.types.identifier(`${tag}Id`))\n);\nconst addTagIdAttribute = (tag, attributes) => {\n  const existingId = attributes.find(\n    (attribute) => core.types.isJSXAttribute(attribute) && attribute.name.name === \"id\"\n  );\n  if (!existingId) {\n    return [...attributes, createTagIdAttribute(tag)];\n  }\n  existingId.value = core.types.jsxExpressionContainer(\n    core.types.isStringLiteral(existingId.value) ? core.types.logicalExpression(\"||\", core.types.identifier(`${tag}Id`), existingId.value) : core.types.identifier(`${tag}Id`)\n  );\n  return attributes;\n};\nconst plugin = () => ({\n  visitor: {\n    JSXElement(path, state) {\n      const tag = state.opts.tag || \"title\";\n      if (!elements.length)\n        return;\n      const openingElement = path.get(\"openingElement\");\n      const openingElementName = openingElement.get(\"name\");\n      if (!elements.some(\n        (element) => openingElementName.isJSXIdentifier({ name: element })\n      )) {\n        return;\n      }\n      const getTagElement = (existingTitle) => {\n        var _a;\n        const tagExpression = core.types.identifier(tag);\n        if (existingTitle) {\n          existingTitle.openingElement.attributes = addTagIdAttribute(\n            tag,\n            existingTitle.openingElement.attributes\n          );\n        }\n        const conditionalTitle = core.types.conditionalExpression(\n          tagExpression,\n          createTagElement(\n            tag,\n            [core.types.jsxExpressionContainer(tagExpression)],\n            existingTitle ? existingTitle.openingElement.attributes : [createTagIdAttribute(tag)]\n          ),\n          core.types.nullLiteral()\n        );\n        if ((_a = existingTitle == null ? void 0 : existingTitle.children) == null ? void 0 : _a.length) {\n          return core.types.jsxExpressionContainer(\n            core.types.conditionalExpression(\n              core.types.binaryExpression(\n                \"===\",\n                tagExpression,\n                core.types.identifier(\"undefined\")\n              ),\n              existingTitle,\n              conditionalTitle\n            )\n          );\n        }\n        return core.types.jsxExpressionContainer(conditionalTitle);\n      };\n      let tagElement = null;\n      const hasTitle = path.get(\"children\").some((childPath) => {\n        if (childPath.node === tagElement)\n          return false;\n        if (!childPath.isJSXElement())\n          return false;\n        const name = childPath.get(\"openingElement\").get(\"name\");\n        if (!name.isJSXIdentifier())\n          return false;\n        if (name.node.name !== tag)\n          return false;\n        tagElement = getTagElement(childPath.node);\n        childPath.replaceWith(tagElement);\n        return true;\n      });\n      tagElement = tagElement || getTagElement();\n      if (!hasTitle) {\n        path.node.children.unshift(tagElement);\n        path.replaceWith(path.node);\n      }\n    }\n  }\n});\n\nmodule.exports = plugin;\n//# sourceMappingURL=index.js.map\n",
    "package.json": "{\n  \"name\": \"@svgr/babel-plugin-svg-dynamic-title\",\n  \"description\": \"Transform SVG by adding a dynamic title element\",\n  \"version\": \"8.0.0\",\n  \"main\": \"./dist/index.js\",\n  \"types\": \"./dist/index.d.ts\",\n  \"exports\": {\n    \".\": {\n      \"types\": \"./dist/index.d.ts\",\n      \"default\": \"./dist/index.js\"\n    },\n    \"./package.json\": \"./package.json\"\n  },\n  \"repository\": \"https://github.com/gregberge/svgr/tree/main/packages/babel-plugin-svg-dynamic-title\",\n  \"author\": \"Greg Berg√© <berge.greg@gmail.com>\",\n  \"publishConfig\": {\n    \"access\": \"public\"\n  },\n  \"keywords\": [\n    \"babel-plugin\"\n  ],\n  \"engines\": {\n    \"node\": \">=14\"\n  },\n  \"homepage\": \"https://react-svgr.com\",\n  \"funding\": {\n    \"type\": \"github\",\n    \"url\": \"https://github.com/sponsors/gregberge\"\n  },\n  \"license\": \"MIT\",\n  \"peerDependencies\": {\n    \"@babel/core\": \"^7.0.0-0\"\n  },\n  \"scripts\": {\n    \"reset\": \"rm -rf dist\",\n    \"build\": \"rollup -c ../../build/rollup.config.mjs\",\n    \"prepublishOnly\": \"pnpm run reset && pnpm run build\"\n  },\n  \"gitHead\": \"52a1079681477587ef0d842c0e78531adf2d2520\"\n}\n"
  },
  "externals": [
    "@babel/core"
  ]
}
