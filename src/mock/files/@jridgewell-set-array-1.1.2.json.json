{
  "packageName": "@jridgewell/set-array",
  "packageVersion": "1.1.2",
  "request": "@jridgewell/set-array",
  "resolved": "dist/set-array.umd.js",
  "files": {
    "dist/set-array.umd.js": "(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n    typeof define === 'function' && define.amd ? define(['exports'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.setArray = {}));\n})(this, (function (exports) { 'use strict';\n\n    /**\n     * Gets the index associated with `key` in the backing array, if it is already present.\n     */\n    exports.get = void 0;\n    /**\n     * Puts `key` into the backing array, if it is not already present. Returns\n     * the index of the `key` in the backing array.\n     */\n    exports.put = void 0;\n    /**\n     * Pops the last added item out of the SetArray.\n     */\n    exports.pop = void 0;\n    /**\n     * SetArray acts like a `Set` (allowing only one occurrence of a string `key`), but provides the\n     * index of the `key` in the backing array.\n     *\n     * This is designed to allow synchronizing a second array with the contents of the backing array,\n     * like how in a sourcemap `sourcesContent[i]` is the source content associated with `source[i]`,\n     * and there are never duplicates.\n     */\n    class SetArray {\n        constructor() {\n            this._indexes = { __proto__: null };\n            this.array = [];\n        }\n    }\n    (() => {\n        exports.get = (strarr, key) => strarr._indexes[key];\n        exports.put = (strarr, key) => {\n            // The key may or may not be present. If it is present, it's a number.\n            const index = exports.get(strarr, key);\n            if (index !== undefined)\n                return index;\n            const { array, _indexes: indexes } = strarr;\n            return (indexes[key] = array.push(key) - 1);\n        };\n        exports.pop = (strarr) => {\n            const { array, _indexes: indexes } = strarr;\n            if (array.length === 0)\n                return;\n            const last = array.pop();\n            indexes[last] = undefined;\n        };\n    })();\n\n    exports.SetArray = SetArray;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n//# sourceMappingURL=set-array.umd.js.map\n",
    "package.json": "{\n  \"name\": \"@jridgewell/set-array\",\n  \"version\": \"1.1.2\",\n  \"description\": \"Like a Set, but provides the index of the `key` in the backing array\",\n  \"keywords\": [],\n  \"author\": \"Justin Ridgewell <justin@ridgewell.name>\",\n  \"license\": \"MIT\",\n  \"repository\": \"https://github.com/jridgewell/set-array\",\n  \"main\": \"dist/set-array.umd.js\",\n  \"module\": \"dist/set-array.mjs\",\n  \"typings\": \"dist/types/set-array.d.ts\",\n  \"exports\": {\n    \".\": [\n      {\n        \"types\": \"./dist/types/set-array.d.ts\",\n        \"browser\": \"./dist/set-array.umd.js\",\n        \"require\": \"./dist/set-array.umd.js\",\n        \"import\": \"./dist/set-array.mjs\"\n      },\n      \"./dist/set-array.umd.js\"\n    ],\n    \"./package.json\": \"./package.json\"\n  },\n  \"files\": [\n    \"dist\",\n    \"src\"\n  ],\n  \"engines\": {\n    \"node\": \">=6.0.0\"\n  },\n  \"scripts\": {\n    \"prebuild\": \"rm -rf dist\",\n    \"build\": \"run-s -n build:*\",\n    \"build:rollup\": \"rollup -c rollup.config.js\",\n    \"build:ts\": \"tsc --project tsconfig.build.json\",\n    \"lint\": \"run-s -n lint:*\",\n    \"lint:prettier\": \"npm run test:lint:prettier -- --write\",\n    \"lint:ts\": \"npm run test:lint:ts -- --fix\",\n    \"pretest\": \"run-s build:rollup\",\n    \"test\": \"run-s -n test:lint test:only\",\n    \"test:debug\": \"mocha --inspect-brk\",\n    \"test:lint\": \"run-s -n test:lint:*\",\n    \"test:lint:prettier\": \"prettier --check '{src,test}/**/*.ts'\",\n    \"test:lint:ts\": \"eslint '{src,test}/**/*.ts'\",\n    \"test:only\": \"mocha\",\n    \"test:coverage\": \"c8 mocha\",\n    \"test:watch\": \"mocha --watch\",\n    \"prepublishOnly\": \"npm run preversion\",\n    \"preversion\": \"run-s test build\"\n  },\n  \"devDependencies\": {\n    \"@rollup/plugin-typescript\": \"8.3.0\",\n    \"@types/mocha\": \"9.1.1\",\n    \"@types/node\": \"17.0.29\",\n    \"@typescript-eslint/eslint-plugin\": \"5.10.0\",\n    \"@typescript-eslint/parser\": \"5.10.0\",\n    \"c8\": \"7.11.0\",\n    \"eslint\": \"8.7.0\",\n    \"eslint-config-prettier\": \"8.3.0\",\n    \"mocha\": \"9.2.0\",\n    \"npm-run-all\": \"4.1.5\",\n    \"prettier\": \"2.5.1\",\n    \"rollup\": \"2.66.0\",\n    \"typescript\": \"4.5.5\"\n  }\n}\n"
  },
  "externals": []
}
