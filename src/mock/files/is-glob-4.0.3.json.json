{
  "packageName": "is-glob",
  "packageVersion": "4.0.3",
  "request": "is-glob",
  "resolved": "index.js",
  "files": {
    "index.js": "/*!\n * is-glob <https://github.com/jonschlinkert/is-glob>\n *\n * Copyright (c) 2014-2017, Jon Schlinkert.\n * Released under the MIT License.\n */\n\nvar isExtglob = require('is-extglob');\nvar chars = { '{': '}', '(': ')', '[': ']'};\nvar strictCheck = function(str) {\n  if (str[0] === '!') {\n    return true;\n  }\n  var index = 0;\n  var pipeIndex = -2;\n  var closeSquareIndex = -2;\n  var closeCurlyIndex = -2;\n  var closeParenIndex = -2;\n  var backSlashIndex = -2;\n  while (index < str.length) {\n    if (str[index] === '*') {\n      return true;\n    }\n\n    if (str[index + 1] === '?' && /[\\].+)]/.test(str[index])) {\n      return true;\n    }\n\n    if (closeSquareIndex !== -1 && str[index] === '[' && str[index + 1] !== ']') {\n      if (closeSquareIndex < index) {\n        closeSquareIndex = str.indexOf(']', index);\n      }\n      if (closeSquareIndex > index) {\n        if (backSlashIndex === -1 || backSlashIndex > closeSquareIndex) {\n          return true;\n        }\n        backSlashIndex = str.indexOf('\\\\', index);\n        if (backSlashIndex === -1 || backSlashIndex > closeSquareIndex) {\n          return true;\n        }\n      }\n    }\n\n    if (closeCurlyIndex !== -1 && str[index] === '{' && str[index + 1] !== '}') {\n      closeCurlyIndex = str.indexOf('}', index);\n      if (closeCurlyIndex > index) {\n        backSlashIndex = str.indexOf('\\\\', index);\n        if (backSlashIndex === -1 || backSlashIndex > closeCurlyIndex) {\n          return true;\n        }\n      }\n    }\n\n    if (closeParenIndex !== -1 && str[index] === '(' && str[index + 1] === '?' && /[:!=]/.test(str[index + 2]) && str[index + 3] !== ')') {\n      closeParenIndex = str.indexOf(')', index);\n      if (closeParenIndex > index) {\n        backSlashIndex = str.indexOf('\\\\', index);\n        if (backSlashIndex === -1 || backSlashIndex > closeParenIndex) {\n          return true;\n        }\n      }\n    }\n\n    if (pipeIndex !== -1 && str[index] === '(' && str[index + 1] !== '|') {\n      if (pipeIndex < index) {\n        pipeIndex = str.indexOf('|', index);\n      }\n      if (pipeIndex !== -1 && str[pipeIndex + 1] !== ')') {\n        closeParenIndex = str.indexOf(')', pipeIndex);\n        if (closeParenIndex > pipeIndex) {\n          backSlashIndex = str.indexOf('\\\\', pipeIndex);\n          if (backSlashIndex === -1 || backSlashIndex > closeParenIndex) {\n            return true;\n          }\n        }\n      }\n    }\n\n    if (str[index] === '\\\\') {\n      var open = str[index + 1];\n      index += 2;\n      var close = chars[open];\n\n      if (close) {\n        var n = str.indexOf(close, index);\n        if (n !== -1) {\n          index = n + 1;\n        }\n      }\n\n      if (str[index] === '!') {\n        return true;\n      }\n    } else {\n      index++;\n    }\n  }\n  return false;\n};\n\nvar relaxedCheck = function(str) {\n  if (str[0] === '!') {\n    return true;\n  }\n  var index = 0;\n  while (index < str.length) {\n    if (/[*?{}()[\\]]/.test(str[index])) {\n      return true;\n    }\n\n    if (str[index] === '\\\\') {\n      var open = str[index + 1];\n      index += 2;\n      var close = chars[open];\n\n      if (close) {\n        var n = str.indexOf(close, index);\n        if (n !== -1) {\n          index = n + 1;\n        }\n      }\n\n      if (str[index] === '!') {\n        return true;\n      }\n    } else {\n      index++;\n    }\n  }\n  return false;\n};\n\nmodule.exports = function isGlob(str, options) {\n  if (typeof str !== 'string' || str === '') {\n    return false;\n  }\n\n  if (isExtglob(str)) {\n    return true;\n  }\n\n  var check = strictCheck;\n\n  // optionally relax check\n  if (options && options.strict === false) {\n    check = relaxedCheck;\n  }\n\n  return check(str);\n};\n",
    "package.json": "{\n  \"name\": \"is-glob\",\n  \"description\": \"Returns `true` if the given string looks like a glob pattern or an extglob pattern. This makes it easy to create code that only uses external modules like node-glob when necessary, resulting in much faster code execution and initialization time, and a better user experience.\",\n  \"version\": \"4.0.3\",\n  \"homepage\": \"https://github.com/micromatch/is-glob\",\n  \"author\": \"Jon Schlinkert (https://github.com/jonschlinkert)\",\n  \"contributors\": [\n    \"Brian Woodward (https://twitter.com/doowb)\",\n    \"Daniel Perez (https://tuvistavie.com)\",\n    \"Jon Schlinkert (http://twitter.com/jonschlinkert)\"\n  ],\n  \"repository\": \"micromatch/is-glob\",\n  \"bugs\": {\n    \"url\": \"https://github.com/micromatch/is-glob/issues\"\n  },\n  \"license\": \"MIT\",\n  \"files\": [\n    \"index.js\"\n  ],\n  \"main\": \"index.js\",\n  \"engines\": {\n    \"node\": \">=0.10.0\"\n  },\n  \"scripts\": {\n    \"test\": \"mocha && node benchmark.js\"\n  },\n  \"dependencies\": {\n    \"is-extglob\": \"^2.1.1\"\n  },\n  \"devDependencies\": {\n    \"gulp-format-md\": \"^0.1.10\",\n    \"mocha\": \"^3.0.2\"\n  },\n  \"keywords\": [\n    \"bash\",\n    \"braces\",\n    \"check\",\n    \"exec\",\n    \"expression\",\n    \"extglob\",\n    \"glob\",\n    \"globbing\",\n    \"globstar\",\n    \"is\",\n    \"match\",\n    \"matches\",\n    \"pattern\",\n    \"regex\",\n    \"regular\",\n    \"string\",\n    \"test\"\n  ],\n  \"verb\": {\n    \"layout\": \"default\",\n    \"plugins\": [\n      \"gulp-format-md\"\n    ],\n    \"related\": {\n      \"list\": [\n        \"assemble\",\n        \"base\",\n        \"update\",\n        \"verb\"\n      ]\n    },\n    \"reflinks\": [\n      \"assemble\",\n      \"bach\",\n      \"base\",\n      \"composer\",\n      \"gulp\",\n      \"has-glob\",\n      \"is-valid-glob\",\n      \"micromatch\",\n      \"npm\",\n      \"scaffold\",\n      \"verb\",\n      \"vinyl\"\n    ]\n  }\n}\n"
  },
  "externals": [
    "is-extglob"
  ]
}
