{
  "packageName": "has-symbols",
  "packageVersion": "1.0.3",
  "request": "has-symbols",
  "resolved": "index.js",
  "files": {
    "index.js": "'use strict';\n\nvar origSymbol = typeof Symbol !== 'undefined' && Symbol;\nvar hasSymbolSham = require('./shams');\n\nmodule.exports = function hasNativeSymbols() {\n\tif (typeof origSymbol !== 'function') { return false; }\n\tif (typeof Symbol !== 'function') { return false; }\n\tif (typeof origSymbol('foo') !== 'symbol') { return false; }\n\tif (typeof Symbol('bar') !== 'symbol') { return false; }\n\n\treturn hasSymbolSham();\n};\n",
    "package.json": "{\n\t\"name\": \"has-symbols\",\n\t\"version\": \"1.0.3\",\n\t\"description\": \"Determine if the JS environment has Symbol support. Supports spec, or shams.\",\n\t\"main\": \"index.js\",\n\t\"scripts\": {\n\t\t\"prepublishOnly\": \"safe-publish-latest\",\n\t\t\"prepublish\": \"not-in-publish || npm run prepublishOnly\",\n\t\t\"pretest\": \"npm run --silent lint\",\n\t\t\"test\": \"npm run tests-only\",\n\t\t\"posttest\": \"aud --production\",\n\t\t\"tests-only\": \"npm run test:stock && npm run test:staging && npm run test:shams\",\n\t\t\"test:stock\": \"nyc node test\",\n\t\t\"test:staging\": \"nyc node --harmony --es-staging test\",\n\t\t\"test:shams\": \"npm run --silent test:shams:getownpropertysymbols && npm run --silent test:shams:corejs\",\n\t\t\"test:shams:corejs\": \"nyc node test/shams/core-js.js\",\n\t\t\"test:shams:getownpropertysymbols\": \"nyc node test/shams/get-own-property-symbols.js\",\n\t\t\"lint\": \"eslint --ext=js,mjs .\",\n\t\t\"version\": \"auto-changelog && git add CHANGELOG.md\",\n\t\t\"postversion\": \"auto-changelog && git add CHANGELOG.md && git commit --no-edit --amend && git tag -f \\\"v$(node -e \\\"console.log(require('./package.json').version)\\\")\\\"\"\n\t},\n\t\"repository\": {\n\t\t\"type\": \"git\",\n\t\t\"url\": \"git://github.com/inspect-js/has-symbols.git\"\n\t},\n\t\"keywords\": [\n\t\t\"Symbol\",\n\t\t\"symbols\",\n\t\t\"typeof\",\n\t\t\"sham\",\n\t\t\"polyfill\",\n\t\t\"native\",\n\t\t\"core-js\",\n\t\t\"ES6\"\n\t],\n\t\"author\": {\n\t\t\"name\": \"Jordan Harband\",\n\t\t\"email\": \"ljharb@gmail.com\",\n\t\t\"url\": \"http://ljharb.codes\"\n\t},\n\t\"contributors\": [\n\t\t{\n\t\t\t\"name\": \"Jordan Harband\",\n\t\t\t\"email\": \"ljharb@gmail.com\",\n\t\t\t\"url\": \"http://ljharb.codes\"\n\t\t}\n\t],\n\t\"funding\": {\n\t\t\"url\": \"https://github.com/sponsors/ljharb\"\n\t},\n\t\"license\": \"MIT\",\n\t\"bugs\": {\n\t\t\"url\": \"https://github.com/ljharb/has-symbols/issues\"\n\t},\n\t\"homepage\": \"https://github.com/ljharb/has-symbols#readme\",\n\t\"devDependencies\": {\n\t\t\"@ljharb/eslint-config\": \"^20.2.3\",\n\t\t\"aud\": \"^2.0.0\",\n\t\t\"auto-changelog\": \"^2.4.0\",\n\t\t\"core-js\": \"^2.6.12\",\n\t\t\"eslint\": \"=8.8.0\",\n\t\t\"get-own-property-symbols\": \"^0.9.5\",\n\t\t\"nyc\": \"^10.3.2\",\n\t\t\"safe-publish-latest\": \"^2.0.0\",\n\t\t\"tape\": \"^5.5.2\"\n\t},\n\t\"testling\": {\n\t\t\"files\": \"test/index.js\",\n\t\t\"browsers\": [\n\t\t\t\"iexplore/6.0..latest\",\n\t\t\t\"firefox/3.0..6.0\",\n\t\t\t\"firefox/15.0..latest\",\n\t\t\t\"firefox/nightly\",\n\t\t\t\"chrome/4.0..10.0\",\n\t\t\t\"chrome/20.0..latest\",\n\t\t\t\"chrome/canary\",\n\t\t\t\"opera/10.0..latest\",\n\t\t\t\"opera/next\",\n\t\t\t\"safari/4.0..latest\",\n\t\t\t\"ipad/6.0..latest\",\n\t\t\t\"iphone/6.0..latest\",\n\t\t\t\"android-browser/4.2\"\n\t\t]\n\t},\n\t\"engines\": {\n\t\t\"node\": \">= 0.4\"\n\t},\n\t\"auto-changelog\": {\n\t\t\"output\": \"CHANGELOG.md\",\n\t\t\"template\": \"keepachangelog\",\n\t\t\"unreleased\": false,\n\t\t\"commitLimit\": false,\n\t\t\"backfillLimit\": false,\n\t\t\"hideCredit\": true\n\t},\n\t\"greenkeeper\": {\n\t\t\"ignore\": [\n\t\t\t\"core-js\"\n\t\t]\n\t}\n}\n",
    "shams.js": "'use strict';\n\n/* eslint complexity: [2, 18], max-statements: [2, 33] */\nmodule.exports = function hasSymbols() {\n\tif (typeof Symbol !== 'function' || typeof Object.getOwnPropertySymbols !== 'function') { return false; }\n\tif (typeof Symbol.iterator === 'symbol') { return true; }\n\n\tvar obj = {};\n\tvar sym = Symbol('test');\n\tvar symObj = Object(sym);\n\tif (typeof sym === 'string') { return false; }\n\n\tif (Object.prototype.toString.call(sym) !== '[object Symbol]') { return false; }\n\tif (Object.prototype.toString.call(symObj) !== '[object Symbol]') { return false; }\n\n\t// temp disabled per https://github.com/ljharb/object.assign/issues/17\n\t// if (sym instanceof Symbol) { return false; }\n\t// temp disabled per https://github.com/WebReflection/get-own-property-symbols/issues/4\n\t// if (!(symObj instanceof Symbol)) { return false; }\n\n\t// if (typeof Symbol.prototype.toString !== 'function') { return false; }\n\t// if (String(sym) !== Symbol.prototype.toString.call(sym)) { return false; }\n\n\tvar symVal = 42;\n\tobj[sym] = symVal;\n\tfor (sym in obj) { return false; } // eslint-disable-line no-restricted-syntax, no-unreachable-loop\n\tif (typeof Object.keys === 'function' && Object.keys(obj).length !== 0) { return false; }\n\n\tif (typeof Object.getOwnPropertyNames === 'function' && Object.getOwnPropertyNames(obj).length !== 0) { return false; }\n\n\tvar syms = Object.getOwnPropertySymbols(obj);\n\tif (syms.length !== 1 || syms[0] !== sym) { return false; }\n\n\tif (!Object.prototype.propertyIsEnumerable.call(obj, sym)) { return false; }\n\n\tif (typeof Object.getOwnPropertyDescriptor === 'function') {\n\t\tvar descriptor = Object.getOwnPropertyDescriptor(obj, sym);\n\t\tif (descriptor.value !== symVal || descriptor.enumerable !== true) { return false; }\n\t}\n\n\treturn true;\n};\n"
  },
  "externals": []
}
