{
  "packageName": "call-bind",
  "packageVersion": "1.0.5",
  "request": "call-bind",
  "resolved": "index.js",
  "files": {
    "index.js": "'use strict';\n\nvar bind = require('function-bind');\nvar GetIntrinsic = require('get-intrinsic');\nvar setFunctionLength = require('set-function-length');\n\nvar $TypeError = GetIntrinsic('%TypeError%');\nvar $apply = GetIntrinsic('%Function.prototype.apply%');\nvar $call = GetIntrinsic('%Function.prototype.call%');\nvar $reflectApply = GetIntrinsic('%Reflect.apply%', true) || bind.call($call, $apply);\n\nvar $defineProperty = GetIntrinsic('%Object.defineProperty%', true);\nvar $max = GetIntrinsic('%Math.max%');\n\nif ($defineProperty) {\n\ttry {\n\t\t$defineProperty({}, 'a', { value: 1 });\n\t} catch (e) {\n\t\t// IE 8 has a broken defineProperty\n\t\t$defineProperty = null;\n\t}\n}\n\nmodule.exports = function callBind(originalFunction) {\n\tif (typeof originalFunction !== 'function') {\n\t\tthrow new $TypeError('a function is required');\n\t}\n\tvar func = $reflectApply(bind, $call, arguments);\n\treturn setFunctionLength(\n\t\tfunc,\n\t\t1 + $max(0, originalFunction.length - (arguments.length - 1)),\n\t\ttrue\n\t);\n};\n\nvar applyBind = function applyBind() {\n\treturn $reflectApply(bind, $apply, arguments);\n};\n\nif ($defineProperty) {\n\t$defineProperty(module.exports, 'apply', { value: applyBind });\n} else {\n\tmodule.exports.apply = applyBind;\n}\n",
    "package.json": "{\n\t\"name\": \"call-bind\",\n\t\"version\": \"1.0.5\",\n\t\"description\": \"Robustly `.call.bind()` a function\",\n\t\"main\": \"index.js\",\n\t\"exports\": {\n\t\t\".\": \"./index.js\",\n\t\t\"./callBound\": \"./callBound.js\",\n\t\t\"./package.json\": \"./package.json\"\n\t},\n\t\"scripts\": {\n\t\t\"prepack\": \"npmignore --auto --commentLines=auto\",\n\t\t\"prepublish\": \"not-in-publish || npm run prepublishOnly\",\n\t\t\"prepublishOnly\": \"safe-publish-latest\",\n\t\t\"lint\": \"eslint --ext=.js,.mjs .\",\n\t\t\"postlint\": \"evalmd README.md\",\n\t\t\"pretest\": \"npm run lint\",\n\t\t\"tests-only\": \"nyc tape 'test/**/*.js'\",\n\t\t\"test\": \"npm run tests-only\",\n\t\t\"posttest\": \"aud --production\",\n\t\t\"version\": \"auto-changelog && git add CHANGELOG.md\",\n\t\t\"postversion\": \"auto-changelog && git add CHANGELOG.md && git commit --no-edit --amend && git tag -f \\\"v$(node -e \\\"console.log(require('./package.json').version)\\\")\\\"\"\n\t},\n\t\"repository\": {\n\t\t\"type\": \"git\",\n\t\t\"url\": \"git+https://github.com/ljharb/call-bind.git\"\n\t},\n\t\"keywords\": [\n\t\t\"javascript\",\n\t\t\"ecmascript\",\n\t\t\"es\",\n\t\t\"js\",\n\t\t\"callbind\",\n\t\t\"callbound\",\n\t\t\"call\",\n\t\t\"bind\",\n\t\t\"bound\",\n\t\t\"call-bind\",\n\t\t\"call-bound\",\n\t\t\"function\",\n\t\t\"es-abstract\"\n\t],\n\t\"author\": \"Jordan Harband <ljharb@gmail.com>\",\n\t\"funding\": {\n\t\t\"url\": \"https://github.com/sponsors/ljharb\"\n\t},\n\t\"license\": \"MIT\",\n\t\"bugs\": {\n\t\t\"url\": \"https://github.com/ljharb/call-bind/issues\"\n\t},\n\t\"homepage\": \"https://github.com/ljharb/call-bind#readme\",\n\t\"devDependencies\": {\n\t\t\"@ljharb/eslint-config\": \"^21.1.0\",\n\t\t\"aud\": \"^2.0.3\",\n\t\t\"auto-changelog\": \"^2.4.0\",\n\t\t\"es-value-fixtures\": \"^1.4.2\",\n\t\t\"eslint\": \"=8.8.0\",\n\t\t\"evalmd\": \"^0.0.19\",\n\t\t\"for-each\": \"^0.3.3\",\n\t\t\"gopd\": \"^1.0.1\",\n\t\t\"has-strict-mode\": \"^1.0.1\",\n\t\t\"in-publish\": \"^2.0.1\",\n\t\t\"npmignore\": \"^0.3.0\",\n\t\t\"nyc\": \"^10.3.2\",\n\t\t\"object-inspect\": \"^1.13.1\",\n\t\t\"safe-publish-latest\": \"^2.0.0\",\n\t\t\"tape\": \"^5.7.1\"\n\t},\n\t\"dependencies\": {\n\t\t\"function-bind\": \"^1.1.2\",\n\t\t\"get-intrinsic\": \"^1.2.1\",\n\t\t\"set-function-length\": \"^1.1.1\"\n\t},\n\t\"testling\": {\n\t\t\"files\": \"test/index.js\"\n\t},\n\t\"auto-changelog\": {\n\t\t\"output\": \"CHANGELOG.md\",\n\t\t\"template\": \"keepachangelog\",\n\t\t\"unreleased\": false,\n\t\t\"commitLimit\": false,\n\t\t\"backfillLimit\": false,\n\t\t\"hideCredit\": true\n\t},\n\t\"publishConfig\": {\n\t\t\"ignore\": [\n\t\t\t\".github/workflows\"\n\t\t]\n\t}\n}\n"
  },
  "externals": [
    "function-bind",
    "get-intrinsic",
    "set-function-length"
  ]
}
